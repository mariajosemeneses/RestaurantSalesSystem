/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ec.edu.espe.restaurantSalesSystem.view;


import ec.edu.espe.restaurantsalessystem.model.Bill;
import java.awt.event.KeyEvent;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 * factTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
 * @author Maria Jos√© Meneses
 */
public class FrmMenu extends javax.swing.JFrame {
int contador = 0;
    int suma = 0;
    /**
     * Creates new form FrmOptionsMenuCustumer
     */
    public FrmMenu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MenuBreakfast = new javax.swing.JFrame();
        txtBreakfast = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        bntOrderBreakfast = new javax.swing.JButton();
        btnReturn = new javax.swing.JButton();
        txtDescription = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        spiValor = new javax.swing.JSpinner();
        spiValor2 = new javax.swing.JSpinner();
        spiValor3 = new javax.swing.JSpinner();
        spiValor4 = new javax.swing.JSpinner();
        spiValor12 = new javax.swing.JSpinner();
        spiValor13 = new javax.swing.JSpinner();
        spiValor14 = new javax.swing.JSpinner();
        spiValor15 = new javax.swing.JSpinner();
        spiValor16 = new javax.swing.JSpinner();
        cafeEnAgua = new javax.swing.JLabel();
        cafeEnLeche = new javax.swing.JLabel();
        teConLimon = new javax.swing.JLabel();
        leche = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel17 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        spiValor8 = new javax.swing.JSpinner();
        spiValor6 = new javax.swing.JSpinner();
        spiValor7 = new javax.swing.JSpinner();
        spiValor5 = new javax.swing.JSpinner();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        spiValor9 = new javax.swing.JSpinner();
        spiValor10 = new javax.swing.JSpinner();
        spiValor11 = new javax.swing.JSpinner();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        spiValor17 = new javax.swing.JSpinner();
        spiValor18 = new javax.swing.JSpinner();
        spiValor19 = new javax.swing.JSpinner();
        spiValor20 = new javax.swing.JSpinner();
        spiValor21 = new javax.swing.JSpinner();
        jSeparator5 = new javax.swing.JSeparator();
        Order = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        btnReturn4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        datosTable = new javax.swing.JTable();
        jLabel34 = new javax.swing.JLabel();
        btnSendOrder = new javax.swing.JButton();
        numMesa = new javax.swing.JTextField();
        viewOrder = new javax.swing.JDialog();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        datosTable2 = new javax.swing.JTable();
        btnGenerateBill = new javax.swing.JButton();
        jLabel35 = new javax.swing.JLabel();
        btnReturn3 = new javax.swing.JButton();
        btnOtherOrder = new javax.swing.JButton();
        GenerateBill = new javax.swing.JDialog();
        jPanel12 = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        txtTableNumber = new javax.swing.JTextField();
        btngenerateBill = new javax.swing.JButton();
        Bill = new javax.swing.JDialog();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        factTable = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        btnCellphoneCostumer = new javax.swing.JTextField();
        txtIdCostumer = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        txtNameCostumer = new javax.swing.JTextField();
        btnReturn1 = new javax.swing.JButton();
        infoFact = new javax.swing.JLabel();
        fac = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jTextField40 = new javax.swing.JLabel();
        numMesa2 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        TOTALtot = new javax.swing.JLabel();
        IVA = new javax.swing.JLabel();
        PROPINA = new javax.swing.JLabel();
        btnPay = new javax.swing.JButton();
        txtNameCashier = new javax.swing.JTextField();
        MenuLunch = new javax.swing.JFrame();
        jLabel8 = new javax.swing.JLabel();
        spiValor22 = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        spiValor23 = new javax.swing.JSpinner();
        spiValor24 = new javax.swing.JSpinner();
        btnReturn2 = new javax.swing.JButton();
        btnOrderLunch = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel42 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        spiValor25 = new javax.swing.JSpinner();
        jLabel48 = new javax.swing.JLabel();
        spiValor26 = new javax.swing.JSpinner();
        spiValor27 = new javax.swing.JSpinner();
        spiValor28 = new javax.swing.JSpinner();
        jSeparator7 = new javax.swing.JSeparator();
        jLabel49 = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();
        jLabel50 = new javax.swing.JLabel();
        spiValor29 = new javax.swing.JSpinner();
        jLabel51 = new javax.swing.JLabel();
        spiValor30 = new javax.swing.JSpinner();
        spiValor31 = new javax.swing.JSpinner();
        jLabel52 = new javax.swing.JLabel();
        spiValor1 = new javax.swing.JSpinner();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        spiValor32 = new javax.swing.JSpinner();
        btnBreakfast = new javax.swing.JButton();
        btnLunch = new javax.swing.JButton();
        btnSnack = new javax.swing.JButton();
        btnDrink = new javax.swing.JButton();
        btnDessert = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnExit = new javax.swing.JButton();

        MenuBreakfast.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        MenuBreakfast.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        txtBreakfast.setFont(new java.awt.Font("Baskerville Old Face", 3, 36)); // NOI18N
        txtBreakfast.setText("Breakfast");

        jLabel2.setFont(new java.awt.Font("Pristina", 0, 36)); // NOI18N
        jLabel2.setText("Bebida");

        jLabel3.setFont(new java.awt.Font("Pristina", 0, 36)); // NOI18N
        jLabel3.setText("Huevos");

        bntOrderBreakfast.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bntOrderBreakfast.setText("Add Order");
        bntOrderBreakfast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntOrderBreakfastActionPerformed(evt);
            }
        });

        btnReturn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnReturn.setText("Return");
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        jLabel12.setText("  ");

        jLabel11.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        jLabel11.setText("HUEVOS REVUELTOS.............$0,20");

        jLabel13.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        jLabel13.setText("HUEVOS COCIDOS...............$0,20");

        jLabel14.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        jLabel14.setText("HUEVOS TIBIOS................$0,20");

        jLabel15.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        jLabel15.setText("TORTA DE HUEVO...............$0,20");

        jLabel16.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        jLabel16.setText("HUEVOS FRITOS (CON YEMA).....$0,20");

        cafeEnAgua.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        cafeEnAgua.setText("CAFE EN AGUA..................$0.50 ");
        cafeEnAgua.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        cafeEnLeche.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        cafeEnLeche.setText("CAFE EN LECHE.................$0.75");

        teConLimon.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        teConLimon.setText("TE CON LIMON..................$0.50");

        leche.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        leche.setText("LECHE.........................$0.60");

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel17.setFont(new java.awt.Font("Pristina", 0, 36)); // NOI18N
        jLabel17.setText("Pan");

        jLabel18.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        jLabel18.setText("SIMPLE...................$0,10");

        jLabel19.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        jLabel19.setText("PAN CON JAMON............$0,25");

        jLabel20.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        jLabel20.setText("PAN CON MORTADELA........$0,25");

        jLabel21.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        jLabel21.setText("PAN INTEGRAL.............$0,25");

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel22.setFont(new java.awt.Font("Pristina", 0, 36)); // NOI18N
        jLabel22.setText("Jugos");

        jLabel23.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        jLabel23.setText("JUGO DE MORA.........................$0,75");

        jLabel24.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        jLabel24.setText("JUGO DE NARANJILLA...................$0,75");

        jLabel25.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        jLabel25.setText("JUGO DE TOMATE DE ARBOL..............$0,75");

        jLabel26.setFont(new java.awt.Font("Pristina", 0, 36)); // NOI18N
        jLabel26.setText("Frutas");

        jLabel27.setFont(new java.awt.Font("Pristina", 0, 36)); // NOI18N
        jLabel27.setText("Estofado");

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel4.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        jLabel4.setText("MANZANA c/u...........$0,35");

        jLabel5.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        jLabel5.setText("PERA c/u..............$0,25");

        jLabel28.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        jLabel28.setText("BANANO c/u............$0,25");

        jLabel29.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        jLabel29.setText("ESTOFADO DE CARNE..................$1,50");

        jLabel30.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        jLabel30.setText("ESTOFADO DE POLLO..................$1,50");

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout MenuBreakfastLayout = new javax.swing.GroupLayout(MenuBreakfast.getContentPane());
        MenuBreakfast.getContentPane().setLayout(MenuBreakfastLayout);
        MenuBreakfastLayout.setHorizontalGroup(
            MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuBreakfastLayout.createSequentialGroup()
                .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MenuBreakfastLayout.createSequentialGroup()
                        .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MenuBreakfastLayout.createSequentialGroup()
                                .addGap(155, 155, 155)
                                .addComponent(jLabel2))
                            .addGroup(MenuBreakfastLayout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(btnReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(MenuBreakfastLayout.createSequentialGroup()
                                        .addGap(98, 98, 98)
                                        .addComponent(jLabel6))
                                    .addComponent(txtDescription))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(MenuBreakfastLayout.createSequentialGroup()
                        .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MenuBreakfastLayout.createSequentialGroup()
                                .addGap(374, 374, 374)
                                .addComponent(jLabel12))
                            .addGroup(MenuBreakfastLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(cafeEnAgua)
                                        .addComponent(cafeEnLeche, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addComponent(teConLimon)
                                    .addComponent(leche))
                                .addGap(18, 18, 18)
                                .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(spiValor2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                                    .addComponent(spiValor3, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(spiValor)
                                    .addComponent(spiValor4)))
                            .addGroup(MenuBreakfastLayout.createSequentialGroup()
                                .addGap(161, 161, 161)
                                .addComponent(jLabel3))
                            .addGroup(MenuBreakfastLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel15))
                                .addGap(18, 18, 18)
                                .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(spiValor16)
                                    .addComponent(spiValor12)
                                    .addComponent(spiValor13)
                                    .addComponent(spiValor14)
                                    .addComponent(spiValor15, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(16, 16, 16)
                        .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MenuBreakfastLayout.createSequentialGroup()
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                                .addComponent(jLabel7)
                                .addGap(24, 24, 24)
                                .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(MenuBreakfastLayout.createSequentialGroup()
                                        .addGap(143, 143, 143)
                                        .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel17)
                                            .addComponent(txtBreakfast, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(MenuBreakfastLayout.createSequentialGroup()
                                        .addGap(105, 105, 105)
                                        .addComponent(jLabel26))
                                    .addGroup(MenuBreakfastLayout.createSequentialGroup()
                                        .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel20)
                                            .addComponent(jLabel21)
                                            .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addGap(18, 18, 18)
                                        .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(spiValor6, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(spiValor5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(spiValor7, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(spiValor8, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(18, 18, 18))
                            .addGroup(MenuBreakfastLayout.createSequentialGroup()
                                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(MenuBreakfastLayout.createSequentialGroup()
                                        .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel28))
                                        .addGap(42, 42, 42)
                                        .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(spiValor17)
                                            .addComponent(spiValor18)
                                            .addComponent(spiValor19, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)))
                .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MenuBreakfastLayout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addComponent(jLabel22)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(MenuBreakfastLayout.createSequentialGroup()
                        .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MenuBreakfastLayout.createSequentialGroup()
                                .addComponent(jLabel29)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(spiValor20, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(MenuBreakfastLayout.createSequentialGroup()
                                .addComponent(jLabel30)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(spiValor21, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(MenuBreakfastLayout.createSequentialGroup()
                                .addGap(161, 161, 161)
                                .addComponent(jLabel27)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(MenuBreakfastLayout.createSequentialGroup()
                                .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(bntOrderBreakfast)
                                    .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel24)
                                        .addComponent(jLabel23)
                                        .addComponent(jLabel25)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(spiValor11, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spiValor9, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spiValor10, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap())))
            .addGroup(MenuBreakfastLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator5))
        );
        MenuBreakfastLayout.setVerticalGroup(
            MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuBreakfastLayout.createSequentialGroup()
                .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MenuBreakfastLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtBreakfast)
                        .addGap(25, 25, 25)
                        .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MenuBreakfastLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(MenuBreakfastLayout.createSequentialGroup()
                                        .addGap(68, 68, 68)
                                        .addComponent(jLabel7)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(MenuBreakfastLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(spiValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cafeEnAgua))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(spiValor2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cafeEnLeche))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(spiValor3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(teConLimon))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(spiValor4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(leche))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addComponent(jLabel12)
                                .addGap(36, 36, 36))
                            .addGroup(MenuBreakfastLayout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addGap(18, 18, 18)
                                .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(spiValor5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel18))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel19)
                                    .addComponent(spiValor6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel20)
                                    .addGroup(MenuBreakfastLayout.createSequentialGroup()
                                        .addComponent(spiValor7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(spiValor8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel21)))))
                            .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jSeparator4, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                                .addComponent(jSeparator2))))
                    .addGroup(MenuBreakfastLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jLabel22)
                        .addGap(18, 18, 18)
                        .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23)
                            .addComponent(spiValor9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24)
                            .addComponent(spiValor10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25)
                            .addComponent(spiValor11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(72, 72, 72)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(MenuBreakfastLayout.createSequentialGroup()
                        .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26)
                            .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MenuBreakfastLayout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel29)
                                    .addComponent(spiValor20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel30)
                                    .addComponent(spiValor21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(MenuBreakfastLayout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(spiValor17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(spiValor18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(MenuBreakfastLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel28))
                                    .addGroup(MenuBreakfastLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(spiValor19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, MenuBreakfastLayout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(18, 18, 18)
                            .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel13)
                                .addComponent(spiValor12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel14)
                                .addComponent(spiValor13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel15)
                                .addComponent(spiValor14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel16)
                                .addComponent(spiValor15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(spiValor16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel11)))
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MenuBreakfastLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtDescription)
                        .addGap(35, 35, 35))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MenuBreakfastLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(MenuBreakfastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnReturn)
                            .addComponent(bntOrderBreakfast))
                        .addGap(26, 26, 26))))
        );

        Order.setTitle("PEDIDOS");
        Order.setMinimumSize(new java.awt.Dimension(840, 580));
        Order.setModal(true);
        Order.setResizable(false);

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel31.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel31.setText("Number table:");
        jPanel3.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 160, -1));

        btnReturn4.setForeground(new java.awt.Color(255, 255, 255));
        btnReturn4.setText("return");
        btnReturn4.setContentAreaFilled(false);
        btnReturn4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnReturn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturn4ActionPerformed(evt);
            }
        });
        jPanel3.add(btnReturn4, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 470, 70, 70));

        datosTable.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        datosTable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        datosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TYPE OF PRODUCT", "PRICE", "QUANTITY"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Float.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(datosTable);

        jPanel3.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 200, 400, 230));

        jLabel34.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        jLabel34.setText("ORDER");
        jPanel3.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, 200, -1));

        btnSendOrder.setBackground(java.awt.Color.white);
        btnSendOrder.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnSendOrder.setText("SEND ORDER");
        btnSendOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendOrderActionPerformed(evt);
            }
        });
        jPanel3.add(btnSendOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 200, 190, 30));
        jPanel3.add(numMesa, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 120, 100, 30));

        javax.swing.GroupLayout OrderLayout = new javax.swing.GroupLayout(Order.getContentPane());
        Order.getContentPane().setLayout(OrderLayout);
        OrderLayout.setHorizontalGroup(
            OrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 830, Short.MAX_VALUE)
        );
        OrderLayout.setVerticalGroup(
            OrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        viewOrder.setTitle("View Order");
        viewOrder.setMinimumSize(new java.awt.Dimension(928, 393));
        viewOrder.setResizable(false);

        jPanel9.setBackground(new java.awt.Color(153, 153, 153));
        jPanel9.setMaximumSize(new java.awt.Dimension(781, 393));
        jPanel9.setMinimumSize(new java.awt.Dimension(781, 393));
        jPanel9.setLayout(null);

        datosTable2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        datosTable2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        datosTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TYPE OF PRODUCT", "QUANTITY", "TABLE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(datosTable2);

        jPanel9.add(jScrollPane4);
        jScrollPane4.setBounds(110, 60, 430, 300);

        btnGenerateBill.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnGenerateBill.setText("GENERAR FACTURA");
        btnGenerateBill.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGenerateBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateBillActionPerformed(evt);
            }
        });
        jPanel9.add(btnGenerateBill);
        btnGenerateBill.setBounds(620, 180, 230, 40);

        jLabel35.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setText("Orders:");
        jPanel9.add(jLabel35);
        jLabel35.setBounds(90, 30, 100, 17);

        btnReturn3.setText("Return");
        btnReturn3.setContentAreaFilled(false);
        btnReturn3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnReturn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturn3ActionPerformed(evt);
            }
        });
        jPanel9.add(btnReturn3);
        btnReturn3.setBounds(10, 331, 80, 50);

        btnOtherOrder.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnOtherOrder.setText("REGISTER OTHER ORDER");
        btnOtherOrder.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnOtherOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOtherOrderActionPerformed(evt);
            }
        });
        jPanel9.add(btnOtherOrder);
        btnOtherOrder.setBounds(620, 260, 230, 40);

        javax.swing.GroupLayout viewOrderLayout = new javax.swing.GroupLayout(viewOrder.getContentPane());
        viewOrder.getContentPane().setLayout(viewOrderLayout);
        viewOrderLayout.setHorizontalGroup(
            viewOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, 928, Short.MAX_VALUE)
        );
        viewOrderLayout.setVerticalGroup(
            viewOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE)
        );

        GenerateBill.setMinimumSize(new java.awt.Dimension(366, 181));
        GenerateBill.setUndecorated(true);
        GenerateBill.setResizable(false);

        jPanel12.setBackground(new java.awt.Color(204, 204, 204));
        jPanel12.setLayout(null);

        jLabel36.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setText("TABLE BILL N¬∞:");
        jPanel12.add(jLabel36);
        jLabel36.setBounds(40, 40, 140, 30);

        txtTableNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTableNumberActionPerformed(evt);
            }
        });
        txtTableNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTableNumberKeyTyped(evt);
            }
        });
        jPanel12.add(txtTableNumber);
        txtTableNumber.setBounds(190, 40, 70, 30);

        btngenerateBill.setBackground(java.awt.Color.white);
        btngenerateBill.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btngenerateBill.setText("Generate");
        btngenerateBill.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btngenerateBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btngenerateBillActionPerformed(evt);
            }
        });
        jPanel12.add(btngenerateBill);
        btngenerateBill.setBounds(90, 90, 140, 30);

        javax.swing.GroupLayout GenerateBillLayout = new javax.swing.GroupLayout(GenerateBill.getContentPane());
        GenerateBill.getContentPane().setLayout(GenerateBillLayout);
        GenerateBillLayout.setHorizontalGroup(
            GenerateBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        GenerateBillLayout.setVerticalGroup(
            GenerateBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
        );

        Bill.setTitle("FACTURA");
        Bill.setMinimumSize(new java.awt.Dimension(680, 694));
        Bill.setModal(true);
        Bill.setResizable(false);
        Bill.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel10.setBackground(new java.awt.Color(204, 204, 204));
        jPanel10.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel10.setMaximumSize(new java.awt.Dimension(620, 400));
        jPanel10.setMinimumSize(new java.awt.Dimension(620, 400));
        jPanel10.setLayout(null);

        factTable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        factTable.setFont(new java.awt.Font("Courier New", 1, 12)); // NOI18N
        factTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DESCRIPCION", "            PRICE", "  QUANTITY", "         SUBTOTAL"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        factTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane5.setViewportView(factTable);

        jPanel10.add(jScrollPane5);
        jScrollPane5.setBounds(50, 330, 590, 150);

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(204, 204, 204), null, null));
        jPanel11.setLayout(null);

        btnCellphoneCostumer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                btnCellphoneCostumerKeyTyped(evt);
            }
        });
        jPanel11.add(btnCellphoneCostumer);
        btnCellphoneCostumer.setBounds(110, 70, 160, 20);

        txtIdCostumer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdCostumerKeyTyped(evt);
            }
        });
        jPanel11.add(txtIdCostumer);
        txtIdCostumer.setBounds(110, 40, 160, 20);

        jLabel37.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel37.setText("Cellphone:");
        jPanel11.add(jLabel37);
        jLabel37.setBounds(10, 70, 90, 20);

        jLabel38.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel38.setText("Id:");
        jPanel11.add(jLabel38);
        jLabel38.setBounds(10, 44, 90, 20);

        jLabel39.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel39.setText("Name:");
        jPanel11.add(jLabel39);
        jLabel39.setBounds(10, 14, 90, 20);

        txtNameCostumer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameCostumerActionPerformed(evt);
            }
        });
        txtNameCostumer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNameCostumerKeyTyped(evt);
            }
        });
        jPanel11.add(txtNameCostumer);
        txtNameCostumer.setBounds(110, 10, 160, 20);

        jPanel10.add(jPanel11);
        jPanel11.setBounds(170, 80, 310, 110);

        btnReturn1.setText("return");
        btnReturn1.setToolTipText("Volver");
        btnReturn1.setContentAreaFilled(false);
        btnReturn1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnReturn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturn1ActionPerformed(evt);
            }
        });
        jPanel10.add(btnReturn1);
        btnReturn1.setBounds(50, 570, 70, 70);

        infoFact.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        infoFact.setText("Cashier:");
        infoFact.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel10.add(infoFact);
        infoFact.setBounds(340, 290, 110, 30);

        fac.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        fac.setText("Restaurant Sales System");
        jPanel10.add(fac);
        fac.setBounds(220, 10, 220, 80);

        jLabel41.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel41.setText("       Factura:            001         Serie:            1             Fecha:   ");
        jLabel41.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel10.add(jLabel41);
        jLabel41.setBounds(50, 250, 410, 30);

        jTextField40.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField40.setText("Mesa: ");
        jTextField40.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel10.add(jTextField40);
        jTextField40.setBounds(50, 290, 60, 30);

        numMesa2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        numMesa2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel10.add(numMesa2);
        numMesa2.setBounds(120, 290, 60, 30);

        jLabel43.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        jLabel43.setText("+Tip");
        jPanel10.add(jLabel43);
        jLabel43.setBounds(360, 510, 90, 20);

        jLabel44.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        jLabel44.setText("+IVA");
        jPanel10.add(jLabel44);
        jLabel44.setBounds(360, 490, 90, 20);

        jLabel45.setFont(new java.awt.Font("Courier New", 3, 12)); // NOI18N
        jLabel45.setText("Total Purchase");
        jPanel10.add(jLabel45);
        jLabel45.setBounds(360, 540, 110, 20);

        TOTALtot.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        TOTALtot.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        TOTALtot.setText("jLabel20");
        jPanel10.add(TOTALtot);
        TOTALtot.setBounds(530, 540, 80, 17);

        IVA.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        IVA.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        IVA.setText("jLabel20");
        jPanel10.add(IVA);
        IVA.setBounds(520, 490, 80, 14);

        PROPINA.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        PROPINA.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        PROPINA.setText("jLabel20");
        jPanel10.add(PROPINA);
        PROPINA.setBounds(520, 510, 80, 14);

        btnPay.setBackground(new java.awt.Color(255, 102, 153));
        btnPay.setText("Pay");
        btnPay.setContentAreaFilled(false);
        btnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayActionPerformed(evt);
            }
        });
        jPanel10.add(btnPay);
        btnPay.setBounds(550, 590, 70, 70);

        txtNameCashier.setBackground(new java.awt.Color(204, 204, 204));
        txtNameCashier.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel10.add(txtNameCashier);
        txtNameCashier.setBounds(470, 290, 150, 30);

        Bill.getContentPane().add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 680, 710));

        jLabel8.setFont(new java.awt.Font("Pristina", 0, 24)); // NOI18N
        jLabel8.setText("Soup");

        jLabel9.setFont(new java.awt.Font("Baskerville Old Face", 3, 24)); // NOI18N
        jLabel9.setText("LUNCH");

        jLabel32.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        jLabel32.setText("VASO DE JUGO DE NARANJILLA.........$0,50");

        jLabel33.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        jLabel33.setText("VASO DE JUGO DE BABACO.............$0,50");

        jLabel40.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        jLabel40.setText("VASO DE JUGO DE PI√ëA...............$0,50");

        btnReturn2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnReturn2.setText("Return");
        btnReturn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturn2ActionPerformed(evt);
            }
        });

        btnOrderLunch.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnOrderLunch.setText("Add Order");
        btnOrderLunch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderLunchActionPerformed(evt);
            }
        });

        jLabel42.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        jLabel42.setText("CHESECAKE................$0,75");

        jLabel10.setFont(new java.awt.Font("Pristina", 0, 24)); // NOI18N
        jLabel10.setText("Dessert");

        jLabel46.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        jLabel46.setText("BROWNIE..................$0,75");

        jLabel47.setFont(new java.awt.Font("Pristina", 0, 24)); // NOI18N
        jLabel47.setText("Juice");

        jLabel48.setFont(new java.awt.Font("Pristina", 0, 24)); // NOI18N
        jLabel48.setText("Main Course");

        jLabel49.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        jLabel49.setText("LASA√ëA DE POLLO (ENSALADA, PAPAS FRITAS).............................................$3,20");

        jSeparator8.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel50.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        jLabel50.setText("CAMARONES APANADOS (SALSA RANCH, ARROZ, MADURO FRITO, PAPAS FRITAS Y ENSALADA).......$2,20");

        jLabel51.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        jLabel51.setText("CHULETA DE CERDO (ARROZ, PAPAS FRITAS Y ENSALADA)....................................$2,00");

        jLabel52.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        jLabel52.setText("PASTEL TRES LECHES.......$0,75");

        jLabel53.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        jLabel53.setText("CALDO DE GALLINA (PECHUGA DE POLLO PICADA, ALVERJA, PAPAS, ZANAHORIA Y APIO)........$1,25");

        jLabel54.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        jLabel54.setText("CREMA DE TOMATE (COLIFLOR, BR√ìCOLI, ZANAHORIA Y CREMA DE TOMATE)....................$1,25");

        jLabel55.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        jLabel55.setText("LOCRO DE PAPAS CON QUESO Y AGUACATE.................................................$1,25");

        javax.swing.GroupLayout MenuLunchLayout = new javax.swing.GroupLayout(MenuLunch.getContentPane());
        MenuLunch.getContentPane().setLayout(MenuLunchLayout);
        MenuLunchLayout.setHorizontalGroup(
            MenuLunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator6, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(MenuLunchLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(MenuLunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MenuLunchLayout.createSequentialGroup()
                        .addGroup(MenuLunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel51)
                            .addComponent(jLabel50)
                            .addComponent(jLabel49))
                        .addGap(18, 18, 18)
                        .addGroup(MenuLunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spiValor27, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spiValor25, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spiValor26, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addComponent(jSeparator7)
                    .addGroup(MenuLunchLayout.createSequentialGroup()
                        .addGroup(MenuLunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(MenuLunchLayout.createSequentialGroup()
                                .addComponent(btnReturn2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnOrderLunch, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(MenuLunchLayout.createSequentialGroup()
                                .addGroup(MenuLunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(MenuLunchLayout.createSequentialGroup()
                                        .addComponent(jLabel32)
                                        .addGap(18, 18, 18)
                                        .addComponent(spiValor30, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(MenuLunchLayout.createSequentialGroup()
                                        .addComponent(jLabel33)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(spiValor29, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(MenuLunchLayout.createSequentialGroup()
                                        .addComponent(jLabel40)
                                        .addGap(18, 18, 18)
                                        .addComponent(spiValor28, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(MenuLunchLayout.createSequentialGroup()
                                        .addGap(169, 169, 169)
                                        .addComponent(jLabel47)))
                                .addGap(18, 18, 18)
                                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(MenuLunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(MenuLunchLayout.createSequentialGroup()
                                        .addComponent(jLabel46)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(spiValor31, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(MenuLunchLayout.createSequentialGroup()
                                        .addGap(132, 132, 132)
                                        .addComponent(jLabel10)
                                        .addGap(124, 124, 124))
                                    .addGroup(MenuLunchLayout.createSequentialGroup()
                                        .addComponent(jLabel42)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(spiValor32, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(MenuLunchLayout.createSequentialGroup()
                                        .addComponent(jLabel52)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(spiValor1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap())))
            .addGroup(MenuLunchLayout.createSequentialGroup()
                .addGroup(MenuLunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MenuLunchLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(MenuLunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MenuLunchLayout.createSequentialGroup()
                                .addGap(305, 305, 305)
                                .addComponent(jLabel8))
                            .addGroup(MenuLunchLayout.createSequentialGroup()
                                .addGroup(MenuLunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, MenuLunchLayout.createSequentialGroup()
                                        .addGap(347, 347, 347)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(MenuLunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel55)
                                        .addComponent(jLabel54)
                                        .addComponent(jLabel53)))
                                .addGap(30, 30, 30)
                                .addGroup(MenuLunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(MenuLunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(spiValor24)
                                        .addComponent(spiValor23, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(spiValor22, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(MenuLunchLayout.createSequentialGroup()
                        .addGap(378, 378, 378)
                        .addComponent(jLabel48)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MenuLunchLayout.setVerticalGroup(
            MenuLunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuLunchLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addGroup(MenuLunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MenuLunchLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(MenuLunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel54)
                            .addComponent(spiValor23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(spiValor24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(MenuLunchLayout.createSequentialGroup()
                        .addGroup(MenuLunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel55)
                            .addComponent(spiValor22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46)
                        .addComponent(jLabel53)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MenuLunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(MenuLunchLayout.createSequentialGroup()
                        .addComponent(jLabel48)
                        .addGap(33, 33, 33)
                        .addComponent(jLabel51)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(MenuLunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel50)
                            .addComponent(spiValor26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(MenuLunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel49)
                            .addComponent(spiValor27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(MenuLunchLayout.createSequentialGroup()
                        .addComponent(spiValor25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68)))
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MenuLunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MenuLunchLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(15, 15, 15)
                        .addGroup(MenuLunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel46)
                            .addComponent(spiValor31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(MenuLunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel42)
                            .addComponent(spiValor32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(MenuLunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel52)
                            .addComponent(spiValor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(MenuLunchLayout.createSequentialGroup()
                        .addComponent(jLabel47)
                        .addGroup(MenuLunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MenuLunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel40)
                                .addComponent(spiValor28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(MenuLunchLayout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(MenuLunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel33)
                                    .addComponent(spiValor29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(MenuLunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel32)
                            .addComponent(spiValor30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(MenuLunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReturn2)
                    .addComponent(btnOrderLunch))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnBreakfast.setFont(new java.awt.Font("Baskerville Old Face", 0, 14)); // NOI18N
        btnBreakfast.setText("BREAKFAST");
        btnBreakfast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBreakfastActionPerformed(evt);
            }
        });

        btnLunch.setFont(new java.awt.Font("Baskerville Old Face", 0, 14)); // NOI18N
        btnLunch.setText("LUNCH");
        btnLunch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLunchActionPerformed(evt);
            }
        });

        btnSnack.setFont(new java.awt.Font("Baskerville Old Face", 0, 14)); // NOI18N
        btnSnack.setText("SNACK");
        btnSnack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSnackActionPerformed(evt);
            }
        });

        btnDrink.setFont(new java.awt.Font("Baskerville Old Face", 0, 14)); // NOI18N
        btnDrink.setText("DRINK");
        btnDrink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDrinkActionPerformed(evt);
            }
        });

        btnDessert.setFont(new java.awt.Font("Baskerville Old Face", 0, 14)); // NOI18N
        btnDessert.setText("DESSERT");
        btnDessert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDessertActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Javanese Text", 0, 24)); // NOI18N
        jLabel1.setText("MENU");

        btnExit.setText("EXIT");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(btnSnack))
                            .addComponent(btnBreakfast))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnDrink)
                                .addGap(35, 35, 35))
                            .addComponent(btnLunch, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(134, 134, 134)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(114, 114, 114)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnDessert)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addComponent(btnExit)))))
                        .addGap(108, 108, 108)))
                .addGap(60, 60, 60))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBreakfast)
                    .addComponent(btnLunch))
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSnack)
                    .addComponent(btnDrink))
                .addGap(49, 49, 49)
                .addComponent(btnDessert)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(btnExit)
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    void limpiarTabla(JTable table) {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
    }

    private void btnBreakfastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBreakfastActionPerformed
       MenuBreakfast.setVisible(true);
       MenuBreakfast.setLocationRelativeTo(null);
    }//GEN-LAST:event_btnBreakfastActionPerformed

    private void btnLunchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLunchActionPerformed
       MenuLunch.setVisible(true);
       MenuLunch.setLocationRelativeTo(null);
    }//GEN-LAST:event_btnLunchActionPerformed

    private void btnSnackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSnackActionPerformed
        this.setVisible(false);
        FrmSnack frmSnack = new FrmSnack();
        frmSnack.setVisible(true);
    }//GEN-LAST:event_btnSnackActionPerformed

    private void btnDrinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDrinkActionPerformed
          this.setVisible(false);
        FrmOptionsDrinkCustomer frmOptionsDrinkCustomer = new FrmOptionsDrinkCustomer();
        frmOptionsDrinkCustomer.setVisible(true);
    }//GEN-LAST:event_btnDrinkActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
            this.setVisible(false);
        FrmRegisterOrder frmRegisterOrder = new FrmRegisterOrder();
        frmRegisterOrder.setVisible(true);
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnDessertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDessertActionPerformed
           this.setVisible(false);
        FrmDessert frmDessert = new FrmDessert();
        frmDessert.setVisible(true);
    }//GEN-LAST:event_btnDessertActionPerformed

    private void bntOrderBreakfastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntOrderBreakfastActionPerformed

        DefaultTableModel model = (DefaultTableModel) datosTable.getModel();
    
        if ( spiValor.getValue().hashCode() > 0) {
            String x = "Cafe en Agua";
            float y;
            y = (float) 0.50 ;
            model.addRow(new Object[]{x, y,spiValor.getValue().hashCode()});
        }
        if (spiValor2.getValue().hashCode()> 0) {
            String x = "Cafe en Leche";
            float y;
            y = (float) 0.75;
            model.addRow(new Object[]{x, y, spiValor2.getValue().hashCode()});
        }
        if (spiValor3.getValue().hashCode() > 0) {
            String x = "Te con Limon";
            float y = (float) 0.50;
            model.addRow(new Object[]{x, y, spiValor3.getValue().hashCode()});
        } 
        if (spiValor4.getValue().hashCode() > 0) {
            String x = "Leche";
            float y =(float) 0.60;
            model.addRow(new Object[]{x, y, spiValor4.getValue().hashCode()});
        }
        if (spiValor5.getValue().hashCode() > 0) {
            String x = "Pan Simple";
            float y = (float) 0.10;
            model.addRow(new Object[]{x, y, spiValor5.getValue().hashCode() });
        }
        if (spiValor6.getValue().hashCode() > 0) {
            String x = "Pan con Jam√≥n";
            float y = (float) 0.25;
            model.addRow(new Object[]{x, y, spiValor6.getValue().hashCode()});
        }
        if (spiValor7.getValue().hashCode() > 0) {
            String x = "Pan con Mortadela";
            float y = (float) 0.25;
            model.addRow(new Object[]{x, y, spiValor7.getValue().hashCode()});
        }
        if (spiValor8.getValue().hashCode() > 0) {
            String x = "Pan Integral";
            float y = (float) 0.25;
            model.addRow(new Object[]{x, y, spiValor8.getValue().hashCode()});
        }
        if (spiValor9.getValue().hashCode() > 0) {
            String x = "Jugo de Mora";
            float y = (float) 0.75;
            model.addRow(new Object[]{x, y, spiValor9.getValue().hashCode()});
        }
        if (spiValor10.getValue().hashCode() > 0) {
            String x = "Jugo de Naranjilla";
            float y = (float) 0.75;
            model.addRow(new Object[]{x, y, spiValor10.getValue().hashCode()});
        }
        if (spiValor11.getValue().hashCode() > 0) {
            String x = "Jugo de Tomate de Arbol";
            float y = (float) 0.75;
            model.addRow(new Object[]{x, y, spiValor11.getValue().hashCode()});
        }
        if (spiValor12.getValue().hashCode() > 0) {
            String x = "Huevos Cocidos";
            float y = (float) 0.20;
            model.addRow(new Object[]{x, y, spiValor12.getValue().hashCode()});
        }
        if (spiValor13.getValue().hashCode() > 0) {
            String x = "Huevos Tibios";
            float y = (float) 0.20;
            model.addRow(new Object[]{x, y, spiValor13.getValue().hashCode()});
        }
        if (spiValor14.getValue().hashCode() > 0) {
            String x = "Torta de Huevo";
            float y = (float) 0.20;
            model.addRow(new Object[]{x, y, spiValor14.getValue().hashCode() });
        }
        if (spiValor15.getValue().hashCode() > 0) {
            String x = "Huevos Fritos";
            float y = (float) 0.20;
            model.addRow(new Object[]{x, y, spiValor15.getValue().hashCode()});
        }
        if (spiValor16.getValue().hashCode() > 0) {
            String x = "Hevos Rvueltos";
            float y = (float) 0.20;
            model.addRow(new Object[]{x, y, spiValor16.getValue().hashCode()});
        }
        if (spiValor17.getValue().hashCode() > 0) {
            String x = "Manzana";
            float y = (float) 0.35;
            model.addRow(new Object[]{x, y, spiValor17.getValue().hashCode()});
        }
        if (spiValor18.getValue().hashCode() > 0) {
            String x = "Pera";
            float y = (float) 0.25;
            model.addRow(new Object[]{x, y, spiValor18.getValue().hashCode()});
        }
        if (spiValor19.getValue().hashCode() > 0) {
            String x = "Banana";
            float y = (float) 0.25;
            model.addRow(new Object[]{x, y, spiValor19.getValue().hashCode()});
        }
        if (spiValor20.getValue().hashCode() > 0) {
            String x = "Estofado de carne";
            float y = (float) 1.50;
            model.addRow(new Object[]{x, y, spiValor20.getValue().hashCode()});
        }
         if (spiValor21.getValue().hashCode() > 0) {
            String x = "Estofado de pollo";
            float y = (float) 1.50;
            model.addRow(new Object[]{x, y, spiValor21.getValue().hashCode()});
        }
        Order.setVisible(true);
        MenuBreakfast.dispose();
    }//GEN-LAST:event_bntOrderBreakfastActionPerformed

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        this.setVisible(false);
        FrmMenu frmMenu = new FrmMenu();
        frmMenu.setVisible(true);
    }//GEN-LAST:event_btnReturnActionPerformed

    private void btnReturn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturn4ActionPerformed
        Order.setVisible(false);
        this.setVisible(true);
    }//GEN-LAST:event_btnReturn4ActionPerformed

    private void btnSendOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendOrderActionPerformed
    if (numMesa.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "You must enter the table number");
        }
       
        DefaultTableModel model2 = (DefaultTableModel) datosTable2.getModel();
 
        if (spiValor.getValue().hashCode() > 0) {
            String x = "Cafe en Agua";
            if (Integer.parseInt(numMesa.getText()) >= 0) {
                model2.addRow(new Object[]{x, spiValor.getValue().hashCode(), numMesa.getText()});
            }
        }
        if (spiValor2.getValue().hashCode()> 0) {
            String x = "Cafe en Leche";
            if (Integer.parseInt(numMesa.getText()) >= 0) {
                model2.addRow(new Object[]{x, spiValor2.getValue().hashCode(), numMesa.getText()});
            }

        }
        if (spiValor3.getValue().hashCode() > 0) {
            String x = "Te con Limon";
            if (Integer.parseInt(numMesa.getText()) >= 0) {
                model2.addRow(new Object[]{x, spiValor3.getValue(), numMesa.getText()});
            }
        }
        if (spiValor4.getValue().hashCode() > 0) {
            String x = "Leche";
            if (Integer.parseInt(numMesa.getText()) >= 0) {
                model2.addRow(new Object[]{x, spiValor4.getValue(), numMesa.getText()});
            }
        }
        if (spiValor5.getValue().hashCode() > 0) {
            String x = "Pan Simple";
            if (Integer.parseInt(numMesa.getText()) >= 0) {
                model2.addRow(new Object[]{x, spiValor6.getValue(), numMesa.getText()});
            }
        }
        if (spiValor6.getValue().hashCode() > 0) {
            String x = "Pan con Jamon";
            if (Integer.parseInt(numMesa.getText()) >= 0) {
                model2.addRow(new Object[]{x, spiValor6.getValue(), numMesa.getText()});
            }
        }
        if (spiValor7.getValue().hashCode() > 0) {
            String x = "Pan con Mortadela";
            if (Integer.parseInt(numMesa.getText()) >= 0) {
                model2.addRow(new Object[]{x, spiValor7.getValue(), numMesa.getText()});
            }
        }
        if (spiValor8.getValue().hashCode() > 0) {
            String x = "Pan Integral";
            if (Integer.parseInt(numMesa.getText()) >= 0) {
                model2.addRow(new Object[]{x, spiValor8.getValue(), numMesa.getText()});
            }
        }
        if (spiValor9.getValue().hashCode() > 0) {
            String x = "Jugo de Mora";
            if (Integer.parseInt(numMesa.getText()) >= 0) {
                model2.addRow(new Object[]{x, spiValor9.getValue(), numMesa.getText()});
            }
        }
        if (spiValor10.getValue().hashCode() > 0) {
            String x = "Jugo de Naranjilla";
            if (Integer.parseInt(numMesa.getText()) >= 0) {
                model2.addRow(new Object[]{x, spiValor10.getValue(), numMesa.getText()});
            }
        }
        if (spiValor11.getValue().hashCode() > 0) {
            String x = "Jugo de Tomate de Arbol";
            if (Integer.parseInt(numMesa.getText()) >= 0) {
                model2.addRow(new Object[]{x, spiValor11.getValue(), numMesa.getText()});
            }
        }
        if (spiValor12.getValue().hashCode() > 0) {
            String x = "Huevos Cocidos";
            if (Integer.parseInt(numMesa.getText()) >= 0) {
                model2.addRow(new Object[]{x, spiValor12.getValue(), numMesa.getText()});
            }
        }
        if (spiValor13.getValue().hashCode() > 0) {
            String x = "Huevos Tibiosos";
            if (Integer.parseInt(numMesa.getText()) >= 0) {
                model2.addRow(new Object[]{x, spiValor13.getValue(), numMesa.getText()});
            }
        }
        if (spiValor14.getValue().hashCode() > 0) {
            String x = "Torta de Huevo";
            if (Integer.parseInt(numMesa.getText()) >= 0) {
                model2.addRow(new Object[]{x, spiValor14.getValue(), numMesa.getText()});
            }
        }
        if (spiValor15.getValue().hashCode() > 0) {
            String x = "Huevos Fritos";
            if (Integer.parseInt(numMesa.getText()) >= 0) {
                model2.addRow(new Object[]{x, spiValor15.getValue(), numMesa.getText()});
            }
        }
        if (spiValor16.getValue().hashCode() > 0) {
            String x = "Huevos Revueltos";
            if (Integer.parseInt(numMesa.getText()) >= 0) {
                model2.addRow(new Object[]{x, spiValor16.getValue(), numMesa.getText()});
            }
        }
        
        if (spiValor17.getValue().hashCode() > 0) {
            String x = "Manzana";
            if (Integer.parseInt(numMesa.getText()) >= 0) {
                model2.addRow(new Object[]{x, spiValor17.getValue(), numMesa.getText()});
            }
        }
        if (spiValor18.getValue().hashCode() > 0) {
            String x = "Pera";
            if (Integer.parseInt(numMesa.getText()) >= 0) {
                model2.addRow(new Object[]{x, spiValor18.getValue(), numMesa.getText()});
            }
        }
        if (spiValor19.getValue().hashCode() > 0) {
            String x = "Banana";
            if (Integer.parseInt(numMesa.getText()) >= 0) {
                model2.addRow(new Object[]{x, spiValor19.getValue(), numMesa.getText()});
            }
        }
        if (spiValor20.getValue().hashCode() > 0) {
            String x = "Estofado de Carne";
            if (Integer.parseInt(numMesa.getText()) >= 0) {
                model2.addRow(new Object[]{x, spiValor20.getValue(), numMesa.getText()});
            }
        }
         if (spiValor21.getValue().hashCode() > 0) {
            String x = "Estofado de Pollo";
            if (Integer.parseInt(numMesa.getText()) >= 0) {
                model2.addRow(new Object[]{x, spiValor21.getValue(), numMesa.getText()});
            }
        }
         //lunch
         if (spiValor22.getValue().hashCode() > 0) {
            String x = "Locro de Papas";
            if (Integer.parseInt(numMesa.getText()) >= 0) {
                model2.addRow(new Object[]{x, spiValor22.getValue(), numMesa.getText()});
            }
        }
         if (spiValor23.getValue().hashCode() > 0) {
            String x = "Crema de Tomate";
            if (Integer.parseInt(numMesa.getText()) >= 0) {
                model2.addRow(new Object[]{x, spiValor23.getValue(), numMesa.getText()});
            }
        }
         
         
        viewOrder.setVisible(true);

        Order.setVisible(false);
    }//GEN-LAST:event_btnSendOrderActionPerformed

    private void btnOtherOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOtherOrderActionPerformed

        //Reset valores de pedido tabla de pedidos
        this.setVisible(false);
       
        limpiarTabla(datosTable);
        numMesa.getText();
        MenuBreakfast.setVisible(true);
        viewOrder.setVisible(false);
        spiValor.getValue();
        spiValor2.getValue();
        spiValor3.getValue();
        spiValor4.getValue();
        spiValor5.getValue();
        spiValor6.getValue();
        spiValor7.getValue();
        spiValor8.getValue();
        spiValor9.getValue();
        spiValor10.getValue();
        spiValor11.getValue();
        spiValor12.getValue();
        spiValor13.getValue();
        spiValor14.getValue();
        spiValor15.getValue();
        spiValor16.getValue();
        spiValor17.getValue();
        spiValor18.getValue();
        spiValor19.getValue();
        spiValor20.getValue();
        spiValor21.getValue();
        spiValor22.getValue();
        spiValor23.getValue();
        
       
    }//GEN-LAST:event_btnOtherOrderActionPerformed

    private void btnGenerateBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateBillActionPerformed
        int filas = datosTable2.getRowCount();

        GenerateBill.setVisible(true);
        GenerateBill.setLocationRelativeTo(null);
        viewOrder.setVisible(false);

    }//GEN-LAST:event_btnGenerateBillActionPerformed

    private void btnReturn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturn3ActionPerformed
        viewOrder.setVisible(false);
        MenuBreakfast.setVisible(true);
    }//GEN-LAST:event_btnReturn3ActionPerformed

    private void txtTableNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTableNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTableNumberActionPerformed

    private void txtTableNumberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTableNumberKeyTyped
        int k = (int) evt.getKeyChar();
        if (k >= 97 && k <= 122 || k >= 65 && k <= 90) {
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
        }
    }//GEN-LAST:event_txtTableNumberKeyTyped

    private void btngenerateBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btngenerateBillActionPerformed
        //Bill
        float contTotal = (float)0.0;
        int c1 = Integer.parseInt(numMesa.getText()), c2 = Integer.parseInt(txtTableNumber.getText());
        int cant = spiValor.getValue().hashCode(),cant2 = spiValor2.getValue().hashCode(),
            cant3 = spiValor3.getValue().hashCode(),cant4 = spiValor4.getValue().hashCode();
        int cant5 = spiValor5.getValue().hashCode(),cant6 = spiValor6.getValue().hashCode(),
            cant7 = spiValor7.getValue().hashCode(),cant8 = spiValor8.getValue().hashCode();
        int cant9 = spiValor9.getValue().hashCode(),cant10 = spiValor10.getValue().hashCode(),
            cant11 = spiValor11.getValue().hashCode();
        int cant12 = spiValor12.getValue().hashCode(),cant13 = spiValor13.getValue().hashCode(),
            cant14 = spiValor14.getValue().hashCode(),cant15 = spiValor15.getValue().hashCode(),cant16 = spiValor16.getValue().hashCode();   
        int cant17 = spiValor17.getValue().hashCode(),cant18 = spiValor18.getValue().hashCode(),cant19 = spiValor19.getValue().hashCode();
        int cant20 = spiValor20.getValue().hashCode(),cant21 = spiValor21.getValue().hashCode();
        //lunch
        int cant22=spiValor22.getValue().hashCode(), cant23 = spiValor23.getValue().hashCode();
   
        if (c1 == c2) {
            if (cant > 0) {

            String x = "Cafe en Agua";
            float y;
            y = (float) 0.50 ;
;

                Bill fact = new Bill();
                fact.setConcepto(x);

                float precio = y;
                fact.setPrecio(precio);

                fact.setCantidad(cant);

                float total = precio * cant;
                fact.setTotal(total);
                contTotal = (float) (contTotal + total); //contador total

                //valores de cada columna de la tabla
                DefaultTableModel model3 = (DefaultTableModel) factTable.getModel();
                model3.addRow(new Object[]{fact.getConcepto(), fact.getPrecio(), fact.getCantidad(), fact.getTotal()});
                factTable.setModel(model3);
            }
 

            if (cant2 > 0) {

                String x = "Cafe en Leche";
                float  y = (float) 0.75;;
               
                Bill fact = new Bill();
                fact.setConcepto(x);

                float precio = y;
                fact.setPrecio(precio);
                fact.setCantidad(cant2);

                float total = cant2 * precio;
                fact.setTotal(total);
                contTotal = (float) (contTotal + total);

                DefaultTableModel model3 = (DefaultTableModel) factTable.getModel();
                model3.addRow(new Object[]{fact.getConcepto(), fact.getPrecio(), fact.getCantidad(), fact.getTotal()});
                factTable.setModel(model3);
            }

            if (cant3 > 0) {
                String x = "Te con Limon";
                float y = (float) 0.50;

                Bill fact = new Bill();
                fact.setConcepto(x);

                float precio = y;
                fact.setPrecio(precio);
                fact.setCantidad(cant3);

                float total = cant3 * precio;
                fact.setTotal(total);
                contTotal = (float) (contTotal + total);

                DefaultTableModel model3 = (DefaultTableModel) factTable.getModel();
                model3.addRow(new Object[]{fact.getConcepto(), fact.getPrecio(), fact.getCantidad(), fact.getTotal()});
                factTable.setModel(model3);

            }

            if (cant4 > 0) {
                String x = "Leche";
                float y =(float) 0.60;
                
                Bill fact = new Bill();
                fact.setConcepto(x);

                float precio = y;
                fact.setPrecio(precio);
                fact.setCantidad(cant4);

                float total = cant4 * precio;
                fact.setTotal(total);
                contTotal = (float) (contTotal + total);

                DefaultTableModel model3 = (DefaultTableModel) factTable.getModel();
                model3.addRow(new Object[]{fact.getConcepto(), fact.getPrecio(), fact.getCantidad(), fact.getTotal()});
                factTable.setModel(model3);
            }
            if (cant5 > 0) {
                String x = "Pan Simple";
                float y = (float) 0.10;
                
                Bill fact = new Bill();
                fact.setConcepto(x);

                float precio = y;
                fact.setPrecio(precio);
                fact.setCantidad(cant5);

                float total = cant5 * precio;
                fact.setTotal(total);
                contTotal = (float) (contTotal + total);

                DefaultTableModel model3 = (DefaultTableModel) factTable.getModel();
                model3.addRow(new Object[]{fact.getConcepto(), fact.getPrecio(), fact.getCantidad(), fact.getTotal()});
                factTable.setModel(model3);
                
            }if (cant6 > 0) {
               String x = "Pan con Jam√≥n";
               float y = (float) 0.25;

                Bill fact = new Bill();
                fact.setConcepto(x);

                float precio = y;
                fact.setPrecio(precio);
                fact.setCantidad(cant6);

                float total = cant6 * precio;
                fact.setTotal(total);
                contTotal = (float) (contTotal + total);

                DefaultTableModel model3 = (DefaultTableModel) factTable.getModel();
                model3.addRow(new Object[]{fact.getConcepto(), fact.getPrecio(), fact.getCantidad(), fact.getTotal()});
                factTable.setModel(model3);
                
            }if (cant7 > 0) {
                String x = "Pan con Mortadela";
                float y = (float) 0.25;

                
                Bill fact = new Bill();
                fact.setConcepto(x);

                float precio = y;
                fact.setPrecio(precio);
                fact.setCantidad(cant7);

                float total = cant7 * precio;
                fact.setTotal(total);
                contTotal = (float) (contTotal + total);

                DefaultTableModel model3 = (DefaultTableModel) factTable.getModel();
                model3.addRow(new Object[]{fact.getConcepto(), fact.getPrecio(), fact.getCantidad(), fact.getTotal()});
                factTable.setModel(model3);
                
            }if (cant8 > 0) {
                String x = "Pan Integral";
                float y = (float) 0.25;

                
                Bill fact = new Bill();
                fact.setConcepto(x);

                float precio = y;
                fact.setPrecio(precio);
                fact.setCantidad(cant8);

                float total = cant8 * precio;
                fact.setTotal(total);
                contTotal = (float) (contTotal + total);

                DefaultTableModel model3 = (DefaultTableModel) factTable.getModel();
                model3.addRow(new Object[]{fact.getConcepto(), fact.getPrecio(), fact.getCantidad(), fact.getTotal()});
                factTable.setModel(model3);
                
            }if (cant9 > 0) {
                String x = "Jugo de Mora";
                float y = (float) 0.75;

                
                Bill fact = new Bill();
                fact.setConcepto(x);

                float precio = y;
                fact.setPrecio(precio);
                fact.setCantidad(cant9);

                float total = cant9 * precio;
                fact.setTotal(total);
                contTotal = (float) (contTotal + total);

                DefaultTableModel model3 = (DefaultTableModel) factTable.getModel();
                model3.addRow(new Object[]{fact.getConcepto(), fact.getPrecio(), fact.getCantidad(), fact.getTotal()});
                factTable.setModel(model3);
                
            }if (cant10 > 0) {
                String x = "Jugo de Naranjilla";
                float y = (float) 0.75;

                Bill fact = new Bill();
                fact.setConcepto(x);

                float precio = y;
                fact.setPrecio(precio);
                fact.setCantidad(cant10);

                float total = cant10 * precio;
                fact.setTotal(total);
                contTotal = (float) (contTotal + total);

                DefaultTableModel model3 = (DefaultTableModel) factTable.getModel();
                model3.addRow(new Object[]{fact.getConcepto(), fact.getPrecio(), fact.getCantidad(), fact.getTotal()});
                factTable.setModel(model3);
                
            }if (cant11 > 0) {
                String x = "Jugo de Tomate de Arbol";
                float y = (float) 0.75;

                
                Bill fact = new Bill();
                fact.setConcepto(x);

                float precio = y;
                fact.setPrecio(precio);
                fact.setCantidad(cant11);

                float total = cant11 * precio;
                fact.setTotal(total);
                contTotal = (float) (contTotal + total);

                DefaultTableModel model3 = (DefaultTableModel) factTable.getModel();
                model3.addRow(new Object[]{fact.getConcepto(), fact.getPrecio(), fact.getCantidad(), fact.getTotal()});
                factTable.setModel(model3);
                
            }if (cant12 > 0) {
                String x = "Huevos Cocidos";
                float y = (float) 0.20;

                
                Bill fact = new Bill();
                fact.setConcepto(x);

                float precio = y;
                fact.setPrecio(precio);
                fact.setCantidad(cant12);

                float total = cant12 * precio;
                fact.setTotal(total);
                contTotal = (float) (contTotal + total);

                DefaultTableModel model3 = (DefaultTableModel) factTable.getModel();
                model3.addRow(new Object[]{fact.getConcepto(), fact.getPrecio(), fact.getCantidad(), fact.getTotal()});
                factTable.setModel(model3);
                
            }if (cant13 > 0) {
                String x = "Huevos Tibios";
                float y = (float) 0.20;

                Bill fact = new Bill();
                fact.setConcepto(x);

                float precio = y;
                fact.setPrecio(precio);
                fact.setCantidad(cant13);

                float total = cant13 * precio;
                fact.setTotal(total);
                contTotal = (float) (contTotal + total);

                DefaultTableModel model3 = (DefaultTableModel) factTable.getModel();
                model3.addRow(new Object[]{fact.getConcepto(), fact.getPrecio(), fact.getCantidad(), fact.getTotal()});
                factTable.setModel(model3);
                
            }if (cant14 > 0) {
                String x = "Torta de Huevo";
                float y = (float) 0.20;

                Bill fact = new Bill();
                fact.setConcepto(x);

                float precio = y;
                fact.setPrecio(precio);
                fact.setCantidad(cant14);

                float total = cant14 * precio;
                fact.setTotal(total);
                contTotal = (float) (contTotal + total);

                DefaultTableModel model3 = (DefaultTableModel) factTable.getModel();
                model3.addRow(new Object[]{fact.getConcepto(), fact.getPrecio(), fact.getCantidad(), fact.getTotal()});
                factTable.setModel(model3);
                
            }if (cant15 > 0) {
                String x = "Huevos Fritos";
                float y = (float) 0.20;

                Bill fact = new Bill();
                fact.setConcepto(x);

                float precio = y;
                fact.setPrecio(precio);
                fact.setCantidad(cant15);

                float total = cant15 * precio;
                fact.setTotal(total);
                contTotal = (float) (contTotal + total);

                DefaultTableModel model3 = (DefaultTableModel) factTable.getModel();
                model3.addRow(new Object[]{fact.getConcepto(), fact.getPrecio(), fact.getCantidad(), fact.getTotal()});
                factTable.setModel(model3);
                
            }if (cant16 > 0) {
                String x = "Hevos Rvueltos";
                float y = (float) 0.20;

                
                Bill fact = new Bill();
                fact.setConcepto(x);

                float precio = y;
                fact.setPrecio(precio);
                fact.setCantidad(cant16);

                float total = cant16 * precio;
                fact.setTotal(total);
                contTotal = (float) (contTotal + total);

                DefaultTableModel model3 = (DefaultTableModel) factTable.getModel();
                model3.addRow(new Object[]{fact.getConcepto(), fact.getPrecio(), fact.getCantidad(), fact.getTotal()});
                factTable.setModel(model3);
                
            }if (cant17 > 0) {
                String x = "Manzana";
                float y = (float) 0.35;

                
                Bill fact = new Bill();
                fact.setConcepto(x);

                float precio = y;
                fact.setPrecio(precio);
                fact.setCantidad(cant17);

                float total = cant17 * precio;
                fact.setTotal(total);
                contTotal = (float) (contTotal + total);

                DefaultTableModel model3 = (DefaultTableModel) factTable.getModel();
                model3.addRow(new Object[]{fact.getConcepto(), fact.getPrecio(), fact.getCantidad(), fact.getTotal()});
                factTable.setModel(model3);
                
            }if (cant18 > 0) {
                String x = "Pera";
                float y = (float) 0.25;
            
                Bill fact = new Bill();
                fact.setConcepto(x);

                float precio = y;
                fact.setPrecio(precio);
                fact.setCantidad(cant18);

                float total = cant18 * precio;
                fact.setTotal(total);
                contTotal = (float) (contTotal + total);

                DefaultTableModel model3 = (DefaultTableModel) factTable.getModel();
                model3.addRow(new Object[]{fact.getConcepto(), fact.getPrecio(), fact.getCantidad(), fact.getTotal()});
                factTable.setModel(model3);
                
            }if (cant19 > 0) {
                String x = "Banana";
                float y = (float) 0.25;

                
                Bill fact = new Bill();
                fact.setConcepto(x);

                float precio = y;
                fact.setPrecio(precio);
                fact.setCantidad(cant19);

                float total = cant19 * precio;
                fact.setTotal(total);
                contTotal = (float) (contTotal + total);

                DefaultTableModel model3 = (DefaultTableModel) factTable.getModel();
                model3.addRow(new Object[]{fact.getConcepto(), fact.getPrecio(), fact.getCantidad(), fact.getTotal()});
                factTable.setModel(model3);
                
            }if (cant20 > 0) {
                String x = "Estofado de carne";
                float y = (float) 1.50;

                
                Bill fact = new Bill();
                fact.setConcepto(x);

                float precio = y;
                fact.setPrecio(precio);
                fact.setCantidad(cant20);

                float total = cant20 * precio;
                fact.setTotal(total);
                contTotal = (float) (contTotal + total);

                DefaultTableModel model3 = (DefaultTableModel) factTable.getModel();
                model3.addRow(new Object[]{fact.getConcepto(), fact.getPrecio(), fact.getCantidad(), fact.getTotal()});
                factTable.setModel(model3);
                
            }if (cant21 > 0) {
                String x = "Estofado de Pollo";
                float y = (float) 1.50;

                
                Bill fact = new Bill();
                fact.setConcepto(x);

                float precio = y;
                fact.setPrecio(precio);
                fact.setCantidad(cant21);

                float total = cant21 * precio;
                fact.setTotal(total);
                contTotal = (float) (contTotal + total);

                DefaultTableModel model3 = (DefaultTableModel) factTable.getModel();
                model3.addRow(new Object[]{fact.getConcepto(), fact.getPrecio(), fact.getCantidad(), fact.getTotal()});
                factTable.setModel(model3);
            }
            
            //lunch
            if (cant22 > 0) {
                String x ="Locro de papas";
                float y = (float) 1.50;

                
                Bill fact = new Bill();
                fact.setConcepto(x);

                float precio = y;
                fact.setPrecio(precio);
                fact.setCantidad(cant22);

                float total = cant22 * precio;
                fact.setTotal(total);
                contTotal = (float) (contTotal + total);

                DefaultTableModel model3 = (DefaultTableModel) factTable.getModel();
                model3.addRow(new Object[]{fact.getConcepto(), fact.getPrecio(), fact.getCantidad(), fact.getTotal()});
                factTable.setModel(model3);
            }
            if (cant23 > 0) {
                String x = "Crema de Tomate";
                float y = (float) 1.50;

                
                Bill fact = new Bill();
                fact.setConcepto(x);

                float precio = y;
                fact.setPrecio(precio);
                fact.setCantidad(cant23);

                float total = cant23 * precio;
                fact.setTotal(total);
                contTotal = (float) (contTotal + total);

                DefaultTableModel model3 = (DefaultTableModel) factTable.getModel();
                model3.addRow(new Object[]{fact.getConcepto(), fact.getPrecio(), fact.getCantidad(), fact.getTotal()});
                factTable.setModel(model3);
            }


           
            //iva prop y total a labels factura
            Double iva = contTotal * 0.12;
            Double prop = contTotal * 0.05;
            Double tot = iva + prop + contTotal;
            IVA.setText(String.valueOf(iva));
            PROPINA.setText(String.valueOf(prop));
            TOTALtot.setText(String.valueOf(tot));

            FrmLoginScreen vp = new FrmLoginScreen();
            String c = txtTableNumber.getText();
            numMesa2.setText(c);
            Bill.setVisible(true);
            Bill.setLocationRelativeTo(null);
            GenerateBill.setVisible(false);
            String fecha1 = (new Date()).toString();

        } else {
            JOptionPane.showMessageDialog(null, "Tables do not match, check again");
            txtTableNumber.setText("");
        }

        if (txtTableNumber.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "You have not entered a table number to generate an invoice.");
        }
    }//GEN-LAST:event_btngenerateBillActionPerformed

    private void btnCellphoneCostumerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCellphoneCostumerKeyTyped
        int k = (int) evt.getKeyChar();
        if (k >= 97 && k <= 122 || k >= 65 && k <= 90) {
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
        }
    }//GEN-LAST:event_btnCellphoneCostumerKeyTyped

    private void txtIdCostumerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdCostumerKeyTyped
        int k = (int) evt.getKeyChar();
        if (k >= 97 && k <= 122 || k >= 65 && k <= 90) {
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
        }
    }//GEN-LAST:event_txtIdCostumerKeyTyped

    private void txtNameCostumerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameCostumerActionPerformed
        JOptionPane.showMessageDialog(null, "El pago se ha realizado satisfactoriamente.");
        txtIdCostumer.setText("");
        txtNameCostumer.setText("");
        btnCellphoneCostumer.setText("");
        infoFact.setText("");
    }//GEN-LAST:event_txtNameCostumerActionPerformed

    private void txtNameCostumerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameCostumerKeyTyped
        char c = evt.getKeyChar();
        if ((c < 'a' || c > 'z') && ((c < 'A') | c > 'Z')) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNameCostumerKeyTyped

    private void btnReturn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturn1ActionPerformed
        Bill.setVisible(false);
        this.setVisible(true);
    }//GEN-LAST:event_btnReturn1ActionPerformed

    private void btnPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayActionPerformed

        //BOTON FINALIZA FACTURA
        Bill f = new Bill();
        f.numventas = 0;

        if ((txtNameCostumer.getText().equals("")) && (txtIdCostumer.getText().equals("")) && (btnCellphoneCostumer.getText().equals(""))) {
            JOptionPane.showMessageDialog(null, "You have not filled in the customer information");

        }

        if (((!txtNameCostumer.getText().equals("")) && (!txtIdCostumer.getText().equals("")) && (!btnCellphoneCostumer.getText().equals("")))) {
            contador++;
            suma = (int) (suma + Double.parseDouble(TOTALtot.getText()));
            f.numventas = f.numventas + 1;
            JOptionPane.showMessageDialog(null, "The payment has been made successfully. SEE YOU LATER");
            Bill.setVisible(false);
            this.setVisible(true);

            txtNameCostumer.setText("");
            txtIdCostumer.setText("");
            btnCellphoneCostumer.setText("");
            numMesa2.setText("");
            limpiarTabla(datosTable);
            limpiarTabla(factTable);
            limpiarTabla(datosTable2);

        }
    }//GEN-LAST:event_btnPayActionPerformed

    private void btnReturn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturn2ActionPerformed
        this.setVisible(false);
        FrmMenu frmOptionsMenuCustomer = new FrmMenu();
        frmOptionsMenuCustomer.setVisible(true);
    }//GEN-LAST:event_btnReturn2ActionPerformed

    private void btnOrderLunchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderLunchActionPerformed
        
        DefaultTableModel model = (DefaultTableModel) datosTable.getModel();
        if (spiValor22.getValue().hashCode() > 0) {
            String x = "Locro de papas";
            float y = (float) 1.25;
            model.addRow(new Object[]{x, y, spiValor22.getValue().hashCode()});
        }
         if (spiValor23.getValue().hashCode() > 0) {
            String x = "Crema de Tomate";
            float y = (float) 1.25;
            model.addRow(new Object[]{x, y, spiValor23.getValue().hashCode()});
        }
        Order.setVisible(true);
        MenuLunch.dispose();
    }//GEN-LAST:event_btnOrderLunchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog Bill;
    private javax.swing.JDialog GenerateBill;
    private javax.swing.JLabel IVA;
    private javax.swing.JFrame MenuBreakfast;
    private javax.swing.JFrame MenuLunch;
    private javax.swing.JDialog Order;
    private javax.swing.JLabel PROPINA;
    private javax.swing.JLabel TOTALtot;
    private javax.swing.JButton bntOrderBreakfast;
    private javax.swing.JButton btnBreakfast;
    private javax.swing.JTextField btnCellphoneCostumer;
    private javax.swing.JButton btnDessert;
    private javax.swing.JButton btnDrink;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnGenerateBill;
    private javax.swing.JButton btnLunch;
    private javax.swing.JButton btnOrderLunch;
    private javax.swing.JButton btnOtherOrder;
    private javax.swing.JButton btnPay;
    private javax.swing.JButton btnReturn;
    private javax.swing.JButton btnReturn1;
    private javax.swing.JButton btnReturn2;
    private javax.swing.JButton btnReturn3;
    private javax.swing.JButton btnReturn4;
    private javax.swing.JButton btnSendOrder;
    private javax.swing.JButton btnSnack;
    private javax.swing.JButton btngenerateBill;
    private javax.swing.JLabel cafeEnAgua;
    private javax.swing.JLabel cafeEnLeche;
    private javax.swing.JTable datosTable;
    private javax.swing.JTable datosTable2;
    private javax.swing.JLabel fac;
    private javax.swing.JTable factTable;
    private javax.swing.JLabel infoFact;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JLabel jTextField40;
    private javax.swing.JLabel leche;
    private javax.swing.JTextField numMesa;
    private javax.swing.JLabel numMesa2;
    private javax.swing.JSpinner spiValor;
    private javax.swing.JSpinner spiValor1;
    private javax.swing.JSpinner spiValor10;
    private javax.swing.JSpinner spiValor11;
    private javax.swing.JSpinner spiValor12;
    private javax.swing.JSpinner spiValor13;
    private javax.swing.JSpinner spiValor14;
    private javax.swing.JSpinner spiValor15;
    private javax.swing.JSpinner spiValor16;
    private javax.swing.JSpinner spiValor17;
    private javax.swing.JSpinner spiValor18;
    private javax.swing.JSpinner spiValor19;
    private javax.swing.JSpinner spiValor2;
    private javax.swing.JSpinner spiValor20;
    private javax.swing.JSpinner spiValor21;
    private javax.swing.JSpinner spiValor22;
    private javax.swing.JSpinner spiValor23;
    private javax.swing.JSpinner spiValor24;
    private javax.swing.JSpinner spiValor25;
    private javax.swing.JSpinner spiValor26;
    private javax.swing.JSpinner spiValor27;
    private javax.swing.JSpinner spiValor28;
    private javax.swing.JSpinner spiValor29;
    private javax.swing.JSpinner spiValor3;
    private javax.swing.JSpinner spiValor30;
    private javax.swing.JSpinner spiValor31;
    private javax.swing.JSpinner spiValor32;
    private javax.swing.JSpinner spiValor4;
    private javax.swing.JSpinner spiValor5;
    private javax.swing.JSpinner spiValor6;
    private javax.swing.JSpinner spiValor7;
    private javax.swing.JSpinner spiValor8;
    private javax.swing.JSpinner spiValor9;
    private javax.swing.JLabel teConLimon;
    private javax.swing.JLabel txtBreakfast;
    private javax.swing.JLabel txtDescription;
    private javax.swing.JTextField txtIdCostumer;
    private javax.swing.JTextField txtNameCashier;
    private javax.swing.JTextField txtNameCostumer;
    private javax.swing.JTextField txtTableNumber;
    private javax.swing.JDialog viewOrder;
    // End of variables declaration//GEN-END:variables


}
